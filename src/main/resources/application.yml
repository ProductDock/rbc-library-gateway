spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:817921738258-cp6qkk9avb03ciibflfltdjdummgqb5p.apps.googleusercontent.com}
            client-secret: ${GOOGLE_CLIENT_SECRET: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}
            scope: openid, email, profile
  data:
    rest:
      base-path: /api
    mongodb:
      authentication-database: user
      host: ${mongo.server.url:localhost}
      port: ${mongo.server.port:28017}
      username: ${mongo.username:root}
      password: ${mongo.password:root1}
      database: user

  cloud:
    gateway:
      default-filters:
        - SaveSession
        - RemoveRequestHeader=Cookie
        - Jwt
        - name: Retry
          args:
            retries: 3
            series: SERVER_ERROR
            methods: GET
            backoff:
              firstBackoff: 50ms
              maxBackoff: 500ms
              factor: 2
              basedOnPreviousValue: false
      routes:
        - id: catalog-route
          uri: ${CATALOG_SERVICE_URL:http://localhost:8082}
          predicates:
            - Path=/api/catalog/books/**
        - id: search-route
          uri: ${SEARCH_SERVICE_URL:http://localhost:8081}
          predicates:
            - Path=/api/search/**
        - id: rental-route
          uri: ${RENTAL_SERVICE_URL:http://localhost:8083}
          predicates:
            - Path=/api/rental/**
        - id: user-profiles-route
          uri: ${USER_PROFILES_SERVICE_URL:http://localhost:8085}
          predicates:
            - Path=/api/user-profiles/**

  redis:
    connection-timeout: 30s
    host: localhost
    port: 6379
    timeout: 5s
  session:
    store-type: redis
    timeout: 10m
    redis:
      namespace: library:gateway

catalog:
  service:
    url: ${CATALOG_SERVICE_URL:http://localhost:8082}
rental:
  service:
    url: ${RENTAL_SERVICE_URL:http://localhost:8083}
inventory:
  service:
    url: ${INVENTORY_SERVICE_URL:http://localhost:8084}
user-profiles:
  service:
    url: ${USER_PROFILES_SERVICE_URL:http://localhost:8085}

security:
  front-to-gateway:
    redirect-uri: http://localhost:3000